@model CartItem
@{
    const int descLength = 50;
    var description = Model == null ? "" : Model.Product.Description ?? "";
    if (description.Length > descLength)
    {
        description = description.Substring(0, descLength - 3) + "...";
    }
}

@*<tr>
    <td>
    <a href=@Url.Action("Index", "Product", new { id = Model.Id })>Product id @Model.Id</a> is: @Model.Name.
    </td>
    <td>
    Costs $@Model.Price
    </td>
    <td>
    Type @Model.ProductTypeId
    </td>
</tr>*@
<tr id="cart_item_@(Model.Product.ProductId)" class="cart-item text-black">
  @*<img src="jeans3.jpg" alt="Denim Jeans" style="width:100%">*@
  <td class="cart-item-name"><h6><a href=@Url.Action("Index", "Product", new { id = Model.Product.ProductId })>@Model.Product.Name</a></h6></td>
  <td class="cart-item-description"><div title="@Model.Product.Description">@description</div></td>
  <td class="cart-item-price">Price: @Model.Product.Price.ToString("0.####")€</td>
  <td class="cart-item-price">Total: <span id="cart_item_@(Model.Product.ProductId)_total">@((Model.Quantity * Model.Product.Price).ToString("0.####"))</span>€</td>
  <td class="cart-item-input">@Html.TextBoxFor(x => x.Quantity, htmlAttributes : new { type = "number", min = "1", step = "1", @class = "cart_item_quantity", product_id=Model.Product.ProductId } )
  <button type="button" class="btn btn-danger" onclick="removeProduct(@Model.Product.ProductId)">x</button></td>
</tr>